/* tnc.c */
int tnc(int n, double x[], double *f, double g[], tnc_function *function, void *state, double low[], double up[], double scale[], double offset[], int messages, int maxiter, int maxCGit, int maxnfeval, double eta, double stepmx, double accuracy, double fmin, double ftol, double xtol, double pgtol, double rescale, int *nfeval);
void tnc_coercex(int n, double x[], double low[], double up[]);
void tnc_unscalex(int n, double x[], double xscale[], double xoffset[]);
void tnc_scalex(int n, double x[], double xscale[], double xoffset[]);
void tnc_scaleg(int n, double g[], double xscale[], double fscale);
void tnc_setConstraints(int n, double x[], int pivot[], double xscale[], double xoffset[], double low[], double up[]);
tnc_rc tnc_minimize(int n, double x[], double *f, double gfull[], tnc_function *function, void *state, double xscale[], double xoffset[], double *fscale, double low[], double up[], tnc_message messages, int maxCGit, int maxiter, int maxnfeval, int *nfeval, double eta, double stepmx, double accuracy, double fmin, double ftol, double xtol, double pgtol, double rescale);
void tnc_project(int n, double x[], int pivot[]);
void tnc_projectConstants(int n, double x[], double xscale[]);
double tnc_stepMax(double step, int n, double x[], double dir[], int pivot[], double low[], double up[], double xscale[], double xoffset[]);
tnc_logical tnc_addConstraint(int n, double x[], double p[], int pivot[], double low[], double up[], double xscale[], double xoffset[]);
tnc_logical tnc_removeConstraint(double gtpnew, double gnorm, double pgtolfs, double f, double fLastConstraint, double g[], int pivot[], int n);
int tnc_direction(double *zsol, double *diagb, double *x, double g[], int n, int maxCGit, int *niter, int maxnfeval, int *nfeval, tnc_logical upd1, double yksk, double yrsr, double *sk, double *yk, double *sr, double *yr, tnc_logical lreset, tnc_function *function, void *state, double xscale[], double xoffset[], double fscale, int *pivot, double accuracy, double gnorm, double xnorm, double low[], double up[]);
void tnc_diagonalScaling(int n, double e[], double v[], double gv[], double r[]);
double tnc_initialStep(double fnew, double fmin, double gtp, double smax);
int tnc_hessianTimesVector(double v[], double gv[], int n, double x[], double g[], tnc_function *function, void *state, double xscale[], double xoffset[], double fscale, double accuracy, double xnorm, double low[], double up[]);
int tnc_msolve(double g[], double y[], int n, double sk[], double yk[], double diagb[], double sr[], double yr[], tnc_logical upd1, double yksk, double yrsr, tnc_logical lreset);
void tnc_ssbfgs(int n, double gamma, double sj[], double hjv[], double hjyj[], double yjsj, double yjhyj, double vsj, double vhyj, double hjp1v[]);
int tnc_initPreconditioner(double diagb[], double emat[], int n, tnc_logical lreset, double yksk, double yrsr, double sk[], double yk[], double sr[], double yr[], tnc_logical upd1);
tnc_ls_rc tnc_linearSearch(int n, double *low, double *up, double *xscale, double *xoffset, double fscale, int *pivot, double *x, double *f, double *gfull, double *s, double *stp, double max_step, double dginit, double xtol, int maxnfeval, int *count, tnc_function *function, void *state, int only_line_search);
int tnc_update_trial_interval(double *x, double *fx, double *dx, double *y, double *fy, double *dy, double *t, double *ft, double *dt, const double tmin, const double tmax, int *brackt);
double tnc_mchpr1(void);
void tnc_dxpy1(int n, double dx[], double dy[]);
void tnc_daxpy1(int n, double da, double dx[], double dy[]);
void tnc_dcopy1(int n, double dx[], double dy[]);
void tnc_dneg1(int n, double v[]);
double tnc_ddot1(int n, double dx[], double dy[]);
double tnc_dnrm21(int n, double dx[]);
